<?php
/**
 * Framework Router
 * The router class for the framework.
 *
 * @package: Framework
 * @author: Kris Pomphrey <kris@krispomphrey.co.uk>
 */
class Router{
  /**
  * Variable that holds the root info.
  * @var mixed
  */
	public $route;

  /**
  * Variable that will hold the controller to call e.g. the first /xxxx/ of the url.
  * @var string
  */
	public $controller;

  /**
  * Variable that will hold everything after the first url segment, e.g. actions.
  * @var array
  */
	public $action;

  /**
  * Variable that holds paths for the router to ignore.
  * @var array
  */
	public $ignore;

  /**
   * Implements init();
   *
   * Construct the router and build the router.
   * Setup ignored paths after the router is built.
   */
	public function __construct(){
		$this->build_route();
		$this->ignore = array('Uploads', 'Assets', 'Framework/admin', 'Favicon.ico', 'docs');
	}

  /**
   * Implements build_route();
   *
   * Build the route for the rest of the app.
   */
	private function build_route(){
		$this->route = substr($_SERVER['PHP_SELF'], strlen('/index.php/'));
		if($this->route){
			$parts = explode('/',$this->route);
			if(strpos($parts[0], '-') !== false){
				$control_parts = explode('-', $parts[0]);
				foreach($control_parts as &$prt){
					$prt = ucwords($prt);
				}
				$control = implode('', $control_parts);
			} else {
				$control = ucwords($parts[0]);
			}
			$this->controller = $control;
			unset($parts[0]);
		 	$this->action = $parts;
		} else {
			$this->controller = 'Index';
		}
	}

  /**
   * Implements redirect();
   *
   * Custom function for redirection.
   */
	public function redirect($url){
		header("Location: $url");
	}
}

